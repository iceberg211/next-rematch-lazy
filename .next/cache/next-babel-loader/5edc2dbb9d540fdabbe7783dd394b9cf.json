{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport fetch from 'isomorphic-unfetch';\nvar github = {\n  name: 'github',\n  state: {\n    users: [],\n    isLoading: false\n  },\n  // initial state\n  reducers: {\n    requestUsers: function requestUsers(state) {\n      return {\n        users: [],\n        isLoading: true\n      };\n    },\n    receiveUsers: function receiveUsers(state, payload) {\n      return {\n        isLoading: false,\n        users: payload\n      };\n    }\n  },\n  effects: {\n    // handle state changes with impure functions.\n    // use async/await for async actions\n    fetchUsers: function () {\n      var _fetchUsers = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var response, users;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                this.requestUsers();\n                _context.next = 4;\n                return fetch('https://api.github.com/users');\n\n              case 4:\n                response = _context.sent;\n                _context.next = 7;\n                return response.json();\n\n              case 7:\n                users = _context.sent;\n                this.receiveUsers(users);\n                _context.next = 15;\n                break;\n\n              case 11:\n                _context.prev = 11;\n                _context.t0 = _context[\"catch\"](0);\n                console.log(_context.t0);\n                this.receiveUsers([]);\n\n              case 15:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 11]]);\n      }));\n\n      function fetchUsers() {\n        return _fetchUsers.apply(this, arguments);\n      }\n\n      return fetchUsers;\n    }()\n  }\n};\nexport default github;","map":{"version":3,"sources":["F:\\next\\with-rematch-app\\shared\\models\\github.js"],"names":["fetch","github","name","state","users","isLoading","reducers","requestUsers","receiveUsers","payload","effects","fetchUsers","response","json","console","log"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AAEA,IAAMC,MAAM,GAAG;AACbC,EAAAA,IAAI,EAAE,QADO;AAEbC,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAE,EADF;AAELC,IAAAA,SAAS,EAAE;AAFN,GAFM;AAKV;AACHC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,YADQ,wBACKJ,KADL,EACY;AAClB,aAAO;AACLC,QAAAA,KAAK,EAAE,EADF;AAELC,QAAAA,SAAS,EAAE;AAFN,OAAP;AAID,KANO;AAORG,IAAAA,YAPQ,wBAOKL,KAPL,EAOYM,OAPZ,EAOqB;AAC3B,aAAO;AACLJ,QAAAA,SAAS,EAAE,KADN;AAELD,QAAAA,KAAK,EAAEK;AAFF,OAAP;AAID;AAZO,GANG;AAoBbC,EAAAA,OAAO,EAAE;AACP;AACA;AACMC,IAAAA,UAHC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKH,qBAAKJ,YAAL;AALG;AAAA,uBAMoBP,KAAK,CAAC,8BAAD,CANzB;;AAAA;AAMGY,gBAAAA,QANH;AAAA;AAAA,uBAOiBA,QAAQ,CAACC,IAAT,EAPjB;;AAAA;AAOGT,gBAAAA,KAPH;AAQH,qBAAKI,YAAL,CAAkBJ,KAAlB;AARG;AAAA;;AAAA;AAAA;AAAA;AAUHU,gBAAAA,OAAO,CAACC,GAAR;AACA,qBAAKP,YAAL,CAAkB,EAAlB;;AAXG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AApBI,CAAf;AAqCA,eAAeP,MAAf","sourcesContent":["import fetch from 'isomorphic-unfetch'\n\nconst github = {\n  name: 'github',\n  state: {\n    users: [],\n    isLoading: false\n  }, // initial state\n  reducers: {\n    requestUsers(state) {\n      return {\n        users: [],\n        isLoading: true\n      }\n    },\n    receiveUsers(state, payload) {\n      return {\n        isLoading: false,\n        users: payload\n      }\n    }\n  },\n  effects: {\n    // handle state changes with impure functions.\n    // use async/await for async actions\n    async fetchUsers() {\n      try {\n        this.requestUsers()\n        const response = await fetch('https://api.github.com/users')\n        const users = await response.json()\n        this.receiveUsers(users)\n      } catch (err) {\n        console.log(err)\n        this.receiveUsers([])\n      }\n    }\n  }\n}\n\nexport default github\n"]},"metadata":{},"sourceType":"module"}