{"version":3,"file":"static/webpack/static\\development\\pages\\github-users.js.72c27a94f455ef82a43e.hot-update.js","sources":["webpack:///./shared/withRematch.js"],"sourcesContent":["/* eslint-disable no-underscore-dangle */\nimport React from 'react';\nimport { Provider, connect } from 'react-redux';\nimport initializeStore from './store';\n\nconst checkServer = () => Object.prototype.toString.call(global.process) === '[object process]';\n\nconst __NEXT_REMATCH_STORE__ = '__NEXT_REMATCH_STORE__';\n\nconst getOrCreateStore = (lazyModel, initialState) => {\n  const isServer = checkServer();\n  if (isServer) {\n    return initializeStore(initialState, lazyModel);\n  }\n\n  // Memoize store in global variable if client\n  if (!window[__NEXT_REMATCH_STORE__]) {\n    window[__NEXT_REMATCH_STORE__] = initializeStore(initialState, lazyModel);\n  }\n  return window[__NEXT_REMATCH_STORE__];\n};\n\n\nexport default (...args) => Component => {\n  const [mapToPops, mapDisToProps, ...lazyModel] = args;\n  const ConnectedComponent = connect(mapToPops, mapDisToProps)(Component);\n\n  return class ComWithRematch extends React.Component {\n    static async getInitialProps(appContext) {\n      // Get or Create the store with `undefined` as initialState\n      // This allows you to set a custom default initialState\n      const store = getOrCreateStore(lazyModel);\n      const isServer = checkServer();\n      if (!isServer && Array.isArray(lazyModel)) {\n        const reduxState = store.getState();\n        lazyModel.forEach(item => {\n          const { name } = item;\n          if (reduxState[name] === undefined) store.model(item);\n        });\n      }\n\n      appContext.store = store;\n      appContext.isServer = isServer;\n\n      let appProps = {};\n      if (typeof Component.getInitialProps === 'function') {\n        appProps = await Component.getInitialProps(appContext);\n      }\n      return {\n        ...appProps,\n        initialReduxState: store.getState()\n      };\n    }\n\n    constructor(props) {\n      super(props);\n      this.store = getOrCreateStore(lazyModel, props.initialReduxState);\n    }\n\n    render() {\n      const { pageProps } = this.props;\n\n      return (\n        <Provider store={this.store}>\n          <ConnectedComponent {...pageProps} />\n        </Provider>\n      );\n    }\n  };\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAEA;AAEA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAlBA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAmBA;AACA;AApBA;AAAA;AAuBA;AAvBA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AA0BA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAGA;AACA;AA/BA;AAAA;AAAA;AAgCA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAxCA;AACA;AADA;AAAA;AAAA;AA0CA;AA9CA;;;;;A","sourceRoot":""}